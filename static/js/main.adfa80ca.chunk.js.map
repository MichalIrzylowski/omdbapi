{"version":3,"sources":["store/movies/actions.ts","components/movies-carousel/movies-carousel.styled.ts","components/movies-carousel/movies-carousel.tsx","utilities/consts.ts","components/movie-card/movie-card.styled.ts","components/movie-card/movie-card.tsx","components/main-content/main-content.styled.ts","components/main-content/main-content.tsx","components/loader/loader.styled.ts","components/loader/loader.tsx","app.styled.ts","App.tsx","store/movies/index.ts","store/index.ts","index.tsx"],"names":["fetchInitialMovies","createAsyncAction","setSwipedMovie","createAction","Wrapper","styled","div","Sticky","Img","animated","img","MoviesCarousel","useState","index","set","movies","useSelector","state","initialMovies","dispatch","useDispatch","transitions","useTransition","p","from","opacity","transform","enter","leave","useEffect","next","timeout","setTimeout","length","clearTimeout","posters","map","movie","Poster","backgroundImages","item","props","key","backgroundImage","src","style","omdb","process","search","TitleWrapper","MovieCard","Title","Year","alt","shared","css","Input","input","Button","button","CardsWrapper","MainContent","swipedMovie","setMovie","title","setTitle","setMovies","handleSubmit","useCallback","e","preventDefault","fetch","then","res","json","Search","handleChange","event","target","value","onSubmit","onChange","imdbID","adjustableLoader","fullPage","Loader","AppWrapper","App","loading","store","request","success","catch","error","failure","className","createReducer","handleAction","actions","payload","message","reducers","combineReducers","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adfa80ca.chunk.js","sourcesContent":["import { createAsyncAction, createAction } from \"typesafe-actions\";\r\n\r\nimport { ShortMovie } from \"../../types/movie\";\r\n\r\nconst FETCH_INITIAL_MOVIES_REQUEST = \"MOVIES/FETCH_INITIAL_MOVIES_REQUEST\";\r\nconst FETCH_INITIAL_MOVIES_SUCCESS = \"MOVIES/FETCH_INITIAL_MOVIES_SUCCESS\";\r\nconst FETCH_INITIAL_MOVIES_FAILURE = \"MOVIES/FETCH_INITIAL_MOVIES_FAILURE\";\r\n\r\nconst SET_SWIPED_MOVIE = \"MOVIES/SET_SWIPED_MOVIE\";\r\n\r\nexport const fetchInitialMovies = createAsyncAction(\r\n    FETCH_INITIAL_MOVIES_REQUEST,\r\n    FETCH_INITIAL_MOVIES_SUCCESS,\r\n    FETCH_INITIAL_MOVIES_FAILURE,\r\n)<void, ShortMovie[], Error>();\r\n\r\nexport const setSwipedMovie = createAction(SET_SWIPED_MOVIE)<number>();\r\n","import styled from \"styled-components\";\r\nimport { animated } from \"react-spring\";\r\n\r\nexport const Wrapper = styled.div`\r\n    grid-column: 1/6;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const Sticky = styled.div`\r\n    position: sticky;\r\n    top: 0;\r\n    height: 100vh;\r\n`;\r\n\r\nexport const Img = styled(animated.img)`\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    will-change: transform opacity;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useTransition } from \"react-spring\";\r\n\r\nimport { setSwipedMovie } from \"../../store/movies/actions\";\r\n\r\nimport * as S from \"./movies-carousel.styled\";\r\n\r\nexport const MoviesCarousel = () => {\r\n    const [index, set] = useState(0);\r\n    const movies = useSelector((state) => state.movies.initialMovies);\r\n    const dispatch = useDispatch();\r\n    const transitions = useTransition(index, (p) => p, {\r\n        from: { opacity: 0, transform: \"translate3d(100%,0,0)\" },\r\n        enter: { opacity: 1, transform: \"translate3d(0%,0,0)\" },\r\n        leave: { opacity: 0, transform: \"translate3d(-50%,0,0)\" },\r\n    });\r\n\r\n    useEffect(() => {\r\n        const next = index + 1;\r\n\r\n        const timeout = setTimeout(() => {\r\n            if (next < movies.length) {\r\n                dispatch(setSwipedMovie(next));\r\n                set(next);\r\n            } else {\r\n                dispatch(setSwipedMovie(0));\r\n                set(0);\r\n            }\r\n        }, 5000);\r\n\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [index, movies.length, dispatch]);\r\n\r\n    const posters = movies.map((movie) => movie.Poster);\r\n\r\n    const backgroundImages = transitions.map(({ item, props, key }) => {\r\n        const backgroundImage = posters[item];\r\n\r\n        return <S.Img key={key} src={backgroundImage} style={{ ...props }} />;\r\n    });\r\n\r\n    return (\r\n        <S.Wrapper>\r\n            <S.Sticky>{backgroundImages}</S.Sticky>\r\n        </S.Wrapper>\r\n    );\r\n};\r\n","export const omdb = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDBAPI}&`;\r\nexport const search = (search: string) => `s=${search}`;\r\nexport const title = (title: string) => `t=${title}`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    border: 1px solid gray;\r\n    border-radius: 5px;\r\n    height: 300px;\r\n    display: flex;\r\n    margin: 20px 20px 0 0;\r\n    flex-grow: 1;\r\n    flex-basis: 40%;\r\n    box-shadow: 0px 0px 15px 0px rgba(100, 100, 100, 0.7);\r\n`;\r\n\r\nexport const Img = styled.img`\r\n    margin-right: 20px;\r\n    width: 180px;\r\n`;\r\n\r\nexport const TitleWrapper = styled.div`\r\n    padding: 10px;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { ShortMovie } from \"../../types/movie\";\r\n\r\nimport * as S from \"./movie-card.styled\";\r\n\r\nexport const MovieCard: React.FC<ShortMovie> = ({ Poster, Title, Year }) => {\r\n    return (\r\n        <S.Wrapper>\r\n            <S.Img src={Poster} alt={Title} />\r\n            <S.TitleWrapper>\r\n                <h3>{Title}</h3>\r\n                <p>Release year: {Year}</p>\r\n            </S.TitleWrapper>\r\n        </S.Wrapper>\r\n    );\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    grid-column: 6 / end;\r\n    height: 100%;\r\n`;\r\n\r\nconst shared = css`\r\n    border: 1px solid gray;\r\n    border-radius: 5px;\r\n    height: 42px;\r\n    padding: 5px;\r\n    font-size: 20px;\r\n    color: black;\r\n    margin-right: 20px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    ${shared}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    ${shared}\r\n`;\r\n\r\nexport const CardsWrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { ShortMovie } from \"../../types/movie\";\r\n\r\nimport { omdb, search } from \"../../utilities/consts\";\r\nimport { MovieCard } from \"../movie-card\";\r\n\r\nimport * as S from \"./main-content.styled\";\r\n\r\nexport const MainContent = () => {\r\n    const { swipedMovie, initialMovies } = useSelector((state) => state.movies);\r\n    const [movie, setMovie] = useState<ShortMovie | null>(null);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [movies, setMovies] = useState<ShortMovie[]>([]);\r\n\r\n    useEffect(() => {\r\n        setMovie(initialMovies[swipedMovie]);\r\n    }, [swipedMovie, initialMovies]);\r\n\r\n    const handleSubmit = useCallback(\r\n        (e: React.FormEvent<HTMLFormElement>) => {\r\n            e.preventDefault();\r\n            fetch(`${omdb}${search(title)}`)\r\n                .then((res) => res.json())\r\n                .then((res) => setMovies(res.Search));\r\n        },\r\n        [title],\r\n    );\r\n\r\n    const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(event.target.value);\r\n    }, []);\r\n\r\n    if (!movie) return null;\r\n\r\n    return (\r\n        <S.Wrapper>\r\n            <h1>Hello there</h1>\r\n            <h3>Here you can find some of my favourite movies:</h3>\r\n            <h2>{movie.Title}</h2>\r\n            <h4>You can search for the movies that you like:</h4>\r\n            <form onSubmit={handleSubmit}>\r\n                <S.Input value={title} onChange={handleChange} />\r\n                <S.Button>Search!</S.Button>\r\n            </form>\r\n            <S.CardsWrapper>\r\n                {movies.map((movie) => (\r\n                    <MovieCard key={movie.imdbID} {...movie} />\r\n                ))}\r\n            </S.CardsWrapper>\r\n        </S.Wrapper>\r\n    );\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { LoaderProps } from \"./loader\";\r\n\r\nconst adjustableLoader = css`\r\n    width: 100%;\r\n    width: 100%;\r\n`;\r\n\r\nconst fullPage = css`\r\n    width: 100vw;\r\n    height: 100vh;\r\n`;\r\n\r\nexport const Loader = styled.div<LoaderProps>`\r\n    ${(props) => (props.fullPage ? fullPage : adjustableLoader)}\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./loader.styled\";\r\n\r\nexport interface LoaderProps {\r\n    fullPage?: boolean;\r\n}\r\n\r\nexport const Loader: React.FC<LoaderProps> = ({ fullPage }) => {\r\n    return <S.Loader fullPage={fullPage}>Loading</S.Loader>;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const AppWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(12, 1fr);\r\n    grid-gap: 20px;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SearchResult } from \"./types/movie\";\r\n\r\nimport { MoviesCarousel } from \"./components/movies-carousel\";\r\nimport { MainContent } from \"./components/main-content\";\r\nimport { Loader } from \"./components/loader\";\r\nimport { fetchInitialMovies } from \"./store/movies/actions\";\r\n\r\nimport { omdb, search } from \"./utilities/consts\";\r\n\r\nimport * as S from \"./app.styled\";\r\n\r\nexport const App = () => {\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector((store) => store.movies.loading);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchInitialMovies.request());\r\n\r\n        fetch(`${omdb}${search(\"star wars\")}`)\r\n            .then((res) => res.json())\r\n            .then((res: SearchResult) => dispatch(fetchInitialMovies.success(res.Search)))\r\n            .catch((error) => dispatch(fetchInitialMovies.failure(error)));\r\n    }, []);\r\n\r\n    if (loading) return <Loader fullPage />;\r\n\r\n    return (\r\n        <S.AppWrapper className=\"App\">\r\n            <MoviesCarousel />\r\n            <MainContent />\r\n        </S.AppWrapper>\r\n    );\r\n};\r\n","import { createReducer, ActionType } from \"typesafe-actions\";\r\nimport { ShortMovie } from \"../../types/movie\";\r\nimport * as actions from \"./actions\";\r\n\r\ninterface MoviesReducer {\r\n    initialMovies: ShortMovie[];\r\n    loading: boolean;\r\n    error?: string;\r\n    searchedMovies?: ShortMovie[];\r\n    swipedMovie: number;\r\n}\r\n\r\ntype Actions = ActionType<typeof actions>;\r\n\r\nconst initialState: MoviesReducer = {\r\n    initialMovies: [],\r\n    loading: false,\r\n    swipedMovie: 0,\r\n};\r\n\r\nexport const movies = createReducer<MoviesReducer, Actions>(initialState)\r\n    .handleAction(actions.fetchInitialMovies.request, (state) => ({ ...state, loading: true }))\r\n    .handleAction(actions.fetchInitialMovies.success, (state, { payload }) => ({ ...state, loading: false, initialMovies: payload }))\r\n    .handleAction(actions.fetchInitialMovies.failure, (state, { payload }) => ({ ...state, error: payload.message }))\r\n    .handleAction(actions.setSwipedMovie, (state, { payload }) => ({ ...state, swipedMovie: payload }));\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { movies } from \"./movies\";\r\n\r\nconst reducers = combineReducers({ movies });\r\n\r\nexport type AppState = ReturnType<typeof reducers>;\r\n\r\nexport const createAppStore = () => createStore(reducers, composeWithDevTools());\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport { App } from \"./App\";\r\nimport { createAppStore } from \"./store\";\r\n\r\nconst store = createAppStore();\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}